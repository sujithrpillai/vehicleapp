apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: vehicle-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: srpillai/vehicleapp-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: vehicle-app
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: vehicle-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: srpillai/vehicleapp-backend-bloom:latest
          imagePullPolicy: Always
          env:
            - name: MONGO_HOST
              value: db
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DB
              value: vehicle_db
            - name: MONGO_USER
              value: admin
            - name: MONGO_PASSWORD
              value: admin
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: vehicle-app
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: vehicle-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: admin
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  namespace: vehicle-app
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: "" 
  hostPath:
    path: /tmp/mongo-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: vehicle-app
spec:
  volumeName: mongo-pv
  accessModes:
    - ReadWriteOnce
  storageClassName: "" 
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: vehicle-app
spec:
  selector:
    app: db
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: vehicle-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express:latest
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_SERVER
              value: db
            - name: ME_CONFIG_MONGODB_PORT
              value: "27017"
            - name: ME_CONFIG_MONGODB_AUTH_DATABASE
              value: admin
            - name: ME_CONFIG_MONGODB_AUTH_USERNAME
              value: admin
            - name: ME_CONFIG_MONGODB_AUTH_PASSWORD
              value: admin
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: admin
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: admin

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
  namespace: vehicle-app
spec:
  type: NodePort
  selector:
    app: mongo-express
  ports:
    - port: 8081
      targetPort: 8081
      nodePort: 30081

